load("//lib:defs.bzl", "library_path", "make_args", "root_path", "static_lib")
load("//lib:lib.bzl", "package_lib")
load("//toolchains/cmake:cmake.bzl", "cmake_lib")
load("//toolchains/make:make.bzl", "make_lib")
load(":package.bzl", "NAME", "NAME_C")

package(default_visibility = ["//:__subpackages__"])

package_lib(
    version_regex = r">\s*blas-([^<]+)\.tgz\s*<",
    version_url = "https://www.netlib.org/blas/",
)

# NOTE: Currently building this package requires a working "gfortran" binary.
# TODO: Build gfortran, and set the F18_FC environment variable to that binary.

FC = root_path("$(execpaths //tools/llvm:flang_runtime)/bin/flang")

cmake_lib(
    name = NAME,
    build_data = ["//tools/llvm:flang_runtime"],
    env = {"FC": FC.replace("${", "$${")},
)

CP_HEADERS = 'cp --dereference "{build_tmpdir}/include"/{name}{{,_f77}}.h "{install_dir}/include"'.format(
    name = NAME_C,
    build_tmpdir = "${BUILD_TMPDIR}",
    install_dir = "${INSTALLDIR}",
)

CP_LIBS = 'cp --dereference "{build_tmpdir}/{static_lib}" "{install_dir}/lib"'.format(
    build_tmpdir = "${BUILD_TMPDIR}",
    install_dir = "${INSTALLDIR}",
    static_lib = static_lib(NAME_C),
)

make_lib(
    name = NAME_C,
    args = make_args(
        blib = library_path(NAME),
        cblib = "../" + static_lib(NAME_C),
        cflags = "-Wno-header-guard",
        fc = FC,
    ),
    build_data = ["//tools/llvm:flang_runtime"],
    postfix_script = "\n".join((CP_HEADERS, CP_LIBS)),
    targets = ["alllib"],
    deps = [":" + NAME],
)
