load("//lib:lib.bzl", "package_lib")
load("//toolchains:utils.bzl", "no_error")
load("//toolchains/make:configure.bzl", "configure_make_lib")
load(":package.bzl", "NAME")

package(default_visibility = ["//:__subpackages__"])

package_lib()

BUILD_DEPS_K8 = [
    "@nasm//:nasm",
]

CONFIGURE_OPTIONS = [
    "--disable-cli",
    "--enable-pic",
    "--enable-static",
]

CONFIGURE_OPTIONS_K8 = CONFIGURE_OPTIONS + [
    "--host=x86_64-pc-linux-gnu",
]

CONFIGURE_OPTIONS_WASM = CONFIGURE_OPTIONS + [
    "--host=wasm32-unknown-emscripten",
    '--extra-cflags="{}"'.format(
        no_error([
            # keep sorted
            "empty-body",
            "unused-but-set-variable",
        ]),
    ),
    "--disable-asm",
]

DBG_ON = ["--enable-debug"]

OPT_ON = ["--enable-lto"]

configure_make_lib(
    name = NAME,
    build_data = {
        "//cond:emscripten": [],
        "//conditions:default": BUILD_DEPS_K8,
    },
    configure_options = select({
        "//cond:clang_dbg": CONFIGURE_OPTIONS_K8 + DBG_ON,
        "//cond:clang_fastbuild": CONFIGURE_OPTIONS_K8,
        "//cond:clang_opt": CONFIGURE_OPTIONS_K8 + OPT_ON,
        "//cond:em_dbg": CONFIGURE_OPTIONS_WASM + DBG_ON,
        "//cond:em_fastbuild": CONFIGURE_OPTIONS_WASM,
        "//cond:em_opt": CONFIGURE_OPTIONS_WASM + OPT_ON,
    }),
    copts = select({
        "//cond:emscripten": ["-sSHARED_MEMORY"],  # for -pthread support
        "//conditions:default": [],
    }),
    env = {
        "//cond:emscripten": {},
        "//conditions:default": {
            "AS": "$(execpath @nasm//:nasm)",
            "ASFLAGS": "",  # override toolchain flags
        },
    },
    env_override = ["ASFLAGS"],
)
