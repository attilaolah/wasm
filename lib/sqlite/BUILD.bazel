load("//lib:lib.bzl", "package_lib")
load("//toolchains:utils.bzl", "no_error")
load("//toolchains/make:configure.bzl", "configure_make_lib")
load("package.bzl", "BINARIES", "NAME", "STATIC_LIBS")

package(default_visibility = ["//:__subpackages__"])

package_lib()

C_FLAGS = no_error([
    # keep sorted
    "macro-redefined",
])

ENV = {"CFLAGS": C_FLAGS}

ENV_WASM = dict(ENV.items() + {
    # Emscripten does not implement popen(), so ignore it:
    "LDFLAGS": "-s ERROR_ON_UNDEFINED_SYMBOLS=0",
}.items())

configure_make_lib(
    name = NAME,
    configure_options = [
        # keep sorted
        "--enable-shared=no",
        "--enable-static=yes",
    ],
    env = {
        "//cond:emscripten": ENV_WASM,
        "//conditions:default": ENV,
    },
    out_binaries = select({
        "//cond:emscripten": [],
        "//conditions:default": BINARIES,
    }),
    out_static_libs = STATIC_LIBS,
)
