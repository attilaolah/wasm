{
  "name": "librt.a",
  "symbols": [
    ".LC0",
    ".LC1",
    ".LC2",
    ".LC3",
    "DW.ref.__gcc_personality_v0",
    "__PRETTY_FUNCTION__.0",
    "__PRETTY_FUNCTION__.1",
    "__PRETTY_FUNCTION__.2",
    "__active_timer_sigev_thread",
    "__active_timer_sigev_thread_lock",
    "__aio_enqueue_request",
    "__aio_find_req",
    "__aio_find_req_fd",
    "__aio_free_request",
    "__aio_init",
    "__aio_new_request_notification",
    "__aio_notify",
    "__aio_notify_only",
    "__aio_remove_request",
    "__aio_remove_request.part.0",
    "__aio_requests_mutex",
    "__aio_sigqueue",
    "__aio_suspend",
    "__aio_suspend.cold",
    "__elf_set___libc_subfreeres_element_free_res__",
    "__helper_once",
    "__helper_tid",
    "__librt_disable_asynccancel",
    "__librt_enable_asynccancel",
    "__lio_listio64_item_notify",
    "__lio_listio_item_notify",
    "__mq_open",
    "__mq_open_2",
    "__mq_timedreceive",
    "__mq_timedsend",
    "__pthread_unwind",
    "__start_helper_thread",
    "__timer_create_new",
    "__timer_delete_new",
    "__timer_getoverrun_new",
    "__timer_gettime_new",
    "__timer_settime_new",
    "add_request_to_runlist",
    "added_atfork.0",
    "aio_cancel",
    "aio_cancel64",
    "aio_error",
    "aio_error64",
    "aio_fsync",
    "aio_fsync64",
    "aio_init",
    "aio_read",
    "aio_read64",
    "aio_return",
    "aio_return64",
    "aio_suspend",
    "aio_suspend64",
    "aio_write",
    "aio_write64",
    "change_sigmask",
    "do_aio_misc_wait",
    "free_res",
    "freelist",
    "handle_fildes_io",
    "helper_thread",
    "idle_thread_count",
    "init_mq_netlink",
    "lio_listio",
    "lio_listio64",
    "mq_close",
    "mq_getattr",
    "mq_notify",
    "mq_open",
    "mq_receive",
    "mq_send",
    "mq_setattr",
    "mq_timedreceive",
    "mq_timedsend",
    "mq_unlink",
    "netlink_socket",
    "notification_function",
    "notify_barrier",
    "notify_func_wrapper",
    "nthreads",
    "once",
    "optim",
    "pool",
    "pool_max_size",
    "pool_size",
    "requests",
    "reset_helper_control",
    "reset_once",
    "runlist",
    "shm_open",
    "shm_unlink",
    "sigtimer_set",
    "timer_create",
    "timer_delete",
    "timer_getoverrun",
    "timer_gettime",
    "timer_helper_thread",
    "timer_settime",
    "timer_sigev_thread"
  ],
  "externs": [
    {
      "archive": "libc.a",
      "symbols": [
        "__assert_fail",
        "__clock_gettime",
        "__close_nocancel",
        "__fortify_fail",
        "__libc_fatal",
        "__libc_pread",
        "__libc_pwrite",
        "__mempcpy",
        "__pthread_attr_setsigmask_internal",
        "__recv",
        "__socket",
        "calloc",
        "errno",
        "fcntl",
        "fdatasync",
        "free",
        "fsync",
        "getpid",
        "getuid",
        "malloc",
        "memcpy",
        "open",
        "pthread_atfork",
        "pthread_attr_destroy",
        "pthread_attr_init",
        "pthread_attr_setdetachstate",
        "pthread_getschedparam",
        "pthread_self",
        "pthread_setschedparam",
        "pthread_sigmask",
        "read",
        "realloc",
        "sigemptyset",
        "sigfillset",
        "sigwaitinfo",
        "strchr",
        "strlen",
        "unlink",
        "write"
      ]
    },
    {
      "archive": "libgcc_eh.a",
      "symbols": [
        "_Unwind_Resume",
        "__gcc_personality_v0"
      ]
    },
    {
      "archive": "libpthread.a",
      "symbols": [
        "__futex_abstimed_wait64",
        "__futex_abstimed_wait_cancelable64",
        "__pthread_barrier_init",
        "__pthread_barrier_wait",
        "__pthread_get_minstack",
        "__shm_directory",
        "pthread_attr_setstacksize",
        "pthread_cancel",
        "pthread_cond_signal",
        "pthread_cond_timedwait",
        "pthread_create",
        "pthread_detach",
        "pthread_exit",
        "pthread_mutex_lock",
        "pthread_mutex_unlock",
        "pthread_once",
        "pthread_setcancelstate"
      ]
    }
  ],
  "undefs": [
    "_GLOBAL_OFFSET_TABLE_"
  ]
}
