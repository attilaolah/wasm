{
  "name": "libanl.a",
  "symbols": [
    {
      "name": ".LC0"
    },
    {
      "name": ".LC1"
    },
    {
      "name": ".LC2"
    },
    {
      "name": ".LC3"
    },
    {
      "name": "__PRETTY_FUNCTION__.0"
    },
    {
      "name": "__PRETTY_FUNCTION__.1"
    },
    {
      "name": "__PRETTY_FUNCTION__.2"
    },
    {
      "name": "__elf_set___libc_subfreeres_element_free_res__"
    },
    {
      "name": "__gai_enqueue_request"
    },
    {
      "name": "__gai_find_request"
    },
    {
      "name": "__gai_new_request_notification"
    },
    {
      "name": "__gai_notify"
    },
    {
      "name": "__gai_notify_only"
    },
    {
      "name": "__gai_remove_request"
    },
    {
      "name": "__gai_requests_mutex"
    },
    {
      "name": "__gai_suspend"
    },
    {
      "name": "free_res"
    },
    {
      "name": "freelist"
    },
    {
      "name": "gai_cancel"
    },
    {
      "name": "gai_error"
    },
    {
      "name": "gai_suspend"
    },
    {
      "name": "getaddrinfo_a"
    },
    {
      "name": "handle_requests"
    },
    {
      "name": "idle_thread_count"
    },
    {
      "name": "notify_func_wrapper"
    },
    {
      "name": "nthreads"
    },
    {
      "name": "pool"
    },
    {
      "name": "pool_max_size"
    },
    {
      "name": "pool_size"
    },
    {
      "name": "requests"
    },
    {
      "name": "requests_tail"
    }
  ],
  "externs": [
    {
      "archive": "libc.a",
      "symbols": [
        "__assert_fail",
        "__assert_perror_fail",
        "__clock_gettime",
        "__gai_sigqueue",
        "__libc_fatal",
        "calloc",
        "errno",
        "free",
        "getaddrinfo",
        "getpid",
        "malloc",
        "pthread_attr_destroy",
        "pthread_attr_init",
        "pthread_attr_setdetachstate",
        "pthread_sigmask",
        "realloc",
        "sigemptyset",
        "sigfillset"
      ]
    },
    {
      "archive": "libpthread.a",
      "symbols": [
        "__futex_abstimed_wait_cancelable64",
        "__pthread_get_minstack",
        "pthread_attr_setstacksize",
        "pthread_cond_signal",
        "pthread_cond_timedwait",
        "pthread_create",
        "pthread_exit",
        "pthread_mutex_lock",
        "pthread_mutex_unlock",
        "pthread_setcancelstate"
      ]
    }
  ],
  "undefs": [
    "_GLOBAL_OFFSET_TABLE_"
  ]
}
