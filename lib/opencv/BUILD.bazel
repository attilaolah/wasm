load("//lib:defs.bzl", "include_flags", "lib_package", "library_path", "link_flags")
load("//toolchains:utils.bzl", "no_error")
load("//toolchains/cmake:cmake.bzl", "cmake_lib")
load("//lib/jpegturbo:package.bzl", link_flags_jpegturbo = "link_flags")
load("//lib/openjpeg:package.bzl", include_dir_openjpeg = "include_dir", library_path_openjpeg = "library_path")
load("//lib/lzma:package.bzl", link_flags_lzma = "link_flags")
load("//lib/webp:package.bzl", include_dir_webp = "include_dir", library_path_webp = "library_path", link_flags_webp = "link_flags")
load("//lib/zstd:package.bzl", link_flags_zstd = "link_flags")

package(default_visibility = ["//:__subpackages__"])

lib_package()

C_FLAGS = include_flags(include_dir_openjpeg())

EXE_LINKER_FLAGS_RELEASE = " ".join([
    link_flags_jpegturbo(),
    link_flags_lzma(),
    link_flags_webp(),
    link_flags_zstd(),
])

cmake_lib(
    name = "opencv",
    cache_entries = {
        "BUILD_SHARED_LIBS": False,
        "INSTALL_CREATE_DISTRIB": True,
        "BUILD_PROTOBUF": False,

        # Dependencies:
        "JPEG_INCLUDE_DIR": "${EXT_BUILD_DEPS}/jpegturbo_lib/include",
        "JPEG_LIBRARY": "${EXT_BUILD_DEPS}/jpegturbo_lib/lib/libjpeg.a",
        "OPENJPEG_INCLUDE_DIR": include_dir_openjpeg(),
        "OPENJPEG_LIBRARY": library_path_openjpeg(),
        "PNG_LIBRARY": "${EXT_BUILD_DEPS}/png_lib/lib/libpng.a",
        "PNG_INCLUDE_DIR": "${EXT_BUILD_DEPS}/png_lib/include",
        "PROTOBUF_INCLUDE_DIR": "${EXT_BUILD_DEPS}/protobuf_lib/include",
        "PROTOBUF_LIBRARY": "${EXT_BUILD_DEPS}/protobuf_lib/lib/libprotobuf.a",
        "TIFF_INCLUDE_DIR": "${EXT_BUILD_DEPS}/tiff_lib/include",
        "TIFF_LIBRARY": "${EXT_BUILD_DEPS}/tiff_lib/lib/libtiff.a",
        "WEBP_INCLUDE_DIR": include_dir_webp(),
        "WEBP_LIBRARY": library_path_webp(),
        "ZLIB_INCLUDE_DIR": "${EXT_BUILD_DEPS}/z_lib/include",
        "ZLIB_LIBRARY": "${EXT_BUILD_DEPS}/z_lib/lib/libz.a",

        # OpenJPEG include dirs:
        "CMAKE_C_FLAGS_RELEASE": C_FLAGS,
        "CMAKE_CXX_FLAGS_RELEASE": C_FLAGS,

        # Transitive dependencies for the linker:
        "CMAKE_EXE_LINKER_FLAGS_RELEASE": EXE_LINKER_FLAGS_RELEASE,
    },
    out_static_libs = [
        "libopencv_{}.a".format(lib)
        for lib in [
            # keep sorted
            "calib3d",
            "core",
            "dnn",
            "features2d",
            "flann",
            "gapi",
            "highgui",
            "imgcodecs",
            "imgproc",
            "ml",
            "objdetect",
            "photo",
            "stitching",
            "video",
            "videoio",
        ]
    ],
    deps = [
        "//lib/jpegturbo",
        "//lib/openjpeg",
        "//lib/png",
        "//lib/protobuf",
        "//lib/tiff",
        "//lib/webp",
        "//lib/z",
    ],
)
