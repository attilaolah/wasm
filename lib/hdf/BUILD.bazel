load("@bazel_skylib//:bzl_library.bzl", "bzl_library")
load("//toolchains:utils.bzl", "no_error")
load("//toolchains/cmake:cmake.bzl", "cmake_lib")

package(default_visibility = ["//:__subpackages__"])

# HDF4 is a very old code base with lots of warnings.
# Since we pass -Werror, disable some warnings so the library would compile.
C_FLAGS = no_error([
    # keep sorted
    "bitwise-op-parentheses",
    "dangling-else",
    "format",
    "implicit-function-declaration",
    "implicit-int",
    "incompatible-function-pointer-types",
    "incompatible-pointer-types-discards-qualifiers",
    "logical-not-parentheses",
    "macro-redefined",
    "misleading-indentation",
    "missing-braces",
    "pointer-bool-conversion",
    "pointer-sign",
    "return-type",
    "self-assign",
    "sizeof-array-div",
    "sometimes-uninitialized",
    "switch",
    "tautological-constant-out-of-range-compare",
    "tautological-pointer-compare",
    "uninitialized",
    "unused-but-set-variable",
    "unused-function",
    "unused-label",
    "unused-variable",
])

# Emulate an i386 environment.
# Emscripten unsets i386 to avoid "platform dependent code (inline assembly)".
C_FLAGS_WASM = C_FLAGS + " -Di386"

CACHE_ENTRIES = {
    "BUILD_SHARED_LIBS": False,
    "BUILD_STATIC_LIBS": True,
    "CMAKE_C_FLAGS": C_FLAGS,
    "HDF4_BUILD_FORTRAN": False,
    "HDF4_BUILD_JAVA": False,
    "HDF4_BUILD_XDR_LIB": True,
    "HDF4_ENABLE_JPEG_LIB_SUPPORT": True,
    "HDF4_ENABLE_SZIP_SUPPORT": True,
    "HDF4_ENABLE_Z_LIB_SUPPORT": True,
    "HDF4_EXTERNALLY_CONFIGURED": True,
    "JPEG_INCLUDE_DIR": "${EXT_BUILD_DEPS}/jpegturbo_lib/include",
    "JPEG_LIBRARY": "${EXT_BUILD_DEPS}/jpegturbo_lib/lib/libjpeg.a",
    "SZIP_INCLUDE_DIR": "${EXT_BUILD_DEPS}/aec_lib/include",
    "SZIP_LIBRARY": "${EXT_BUILD_DEPS}/aec_lib/lib/libsz.a",
    "ZLIB_INCLUDE_DIR": "${EXT_BUILD_DEPS}/z_lib/include",
    "ZLIB_LIBRARY": "${EXT_BUILD_DEPS}/z_lib/lib/libz.a",
}

CACHE_ENTRIES_WASM = dict(CACHE_ENTRIES.items() + {
    "CMAKE_C_FLAGS": C_FLAGS_WASM,
}.items())

cmake_lib(
    name = "hdf",
    cache_entries = {
        "//config:wasm": CACHE_ENTRIES_WASM,
        "//conditions:default": CACHE_ENTRIES,
    },
    out_static_libs = [
        # keep sorted
        "libdf.a",
        "libhdf.a",
        "libmfhdf.a",
        "libxdr.a",
    ],
    # Duplicate libhdf.a as libdf.a.
    # CMake produces libhdf.a, while ./configure && make produces libdf.a.
    postfix_script = 'cp --archive --dereference "${INSTALLDIR}/lib/libhdf.a" "${INSTALLDIR}/lib/libdf.a"',
    deps = [
        "//lib/aec",
        "//lib/jpegturbo",
        "//lib/z",
    ],
)

bzl_library(
    name = "package",
    srcs = ["package.bzl"],
    deps = ["//:http_archive"],
)
