load("//lib:defs.bzl", "include_dir", "library_path", "static_lib")
load("//lib:lib.bzl", "package_lib")

# Library deps:
load("//lib/jpegturbo:package.bzl", JPEGTURBO_SPEC = "SPEC")
load("//toolchains:utils.bzl", "no_error")
load("//toolchains/cmake:cmake.bzl", "cache_entries", "cmake_lib")
load(":package.bzl", "NAME", "STATIC_LIBS")

package(default_visibility = ["//:__subpackages__"])

package_lib()

# HDF4 is a very old code base with lots of warnings.
# Since we pass -Werror, disable some warnings so the library would compile.
C_FLAGS = no_error([
    # keep sorted
    "bitwise-op-parentheses",
    "dangling-else",
    "format",
    "implicit-function-declaration",
    "implicit-int",
    "incompatible-function-pointer-types",
    "incompatible-pointer-types-discards-qualifiers",
    "logical-not-parentheses",
    "macro-redefined",
    "misleading-indentation",
    "missing-braces",
    "pointer-bool-conversion",
    "pointer-sign",
    "return-type",
    "self-assign",
    "sizeof-array-div",
    "sometimes-uninitialized",
    "switch",
    "tautological-constant-out-of-range-compare",
    "tautological-pointer-compare",
    "uninitialized",
    "unused-but-set-variable",
    "unused-function",
    "unused-label",
    "unused-variable",
])

CACHE_ENTRIES = cache_entries(
    build_shared_libs = False,
    build_static_libs = True,
    hdf4_build_fortran = False,
    hdf4_build_java = False,
    hdf4_build_xdr_lib = True,
    hdf4_enable_jpeg_lib_support = True,
    hdf4_enable_szip_support = True,
    hdf4_enable_z_lib_support = True,
    hdf4_externally_configured = True,
    deps = {
        "jpeg": JPEGTURBO_SPEC,
        "szip": {
            "include_dir": include_dir("aec"),
            "library": library_path(
                "aec",
                static_lib("sz"),
            ),
        },
        "z": {},
    },
)

cmake_lib(
    name = NAME,
    cache_entries = {
        "//config:wasm": cache_entries(
            CACHE_ENTRIES,
            # Emulate an i386 environment.
            # Emscripten unsets i386 to avoid "platform dependent code (inline assembly)".
            cmake_c_flags = " ".join([C_FLAGS + "-Di386"]),
        ),
        "//conditions:default": cache_entries(
            CACHE_ENTRIES,
            cmake_c_flags = C_FLAGS,
        ),
    },
    out_static_libs = STATIC_LIBS.values(),
    # Duplicate libhdf.a as libdf.a.
    # CMake produces libhdf.a, while ./configure && make produces libdf.a.
    postfix_script = " ".join([
        "cp",
        "--archive",
        "--dereference",
        '"{install_dir}/lib/{lib_hdf}"',
        '"{install_dir}/lib/{lib_df}"',
    ]).format(
        install_dir = "${INSTALLDIR}",
        lib_df = STATIC_LIBS["df"],
        lib_hdf = STATIC_LIBS["hdf"],
    ),
    deps = [
        "//lib/aec",
        "//lib/jpegturbo",
        "//lib/z",
    ],
)
