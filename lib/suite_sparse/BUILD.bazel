load("@bazel_skylib//:bzl_library.bzl", "bzl_library")
load("//toolchains/cmake:cmake.bzl", "cmake_lib")
load("//toolchains/make:make.bzl", "make_lib")
load(":libraries.bzl", "LIB_SOURCE", "suite_sparse_lib")
load(":package.bzl", "METIS_VERSION")

package(default_visibility = ["//:__subpackages__"])

METIS_PATH = "metis-{}".format(METIS_VERSION)

GK_PATH = "{}/GKlib".format(METIS_PATH)

suite_sparse_lib(name = "amd")

suite_sparse_lib(name = "btf")

suite_sparse_lib(name = "camd")

suite_sparse_lib(name = "ccolamd")

suite_sparse_lib(name = "cholmod")

suite_sparse_lib(name = "colamd")

suite_sparse_lib(
    name = "csparse",
    directory = "CSparse",
)

suite_sparse_lib(
    name = "cxsparse",
    directory = "CXSparse",
)

suite_sparse_lib(name = "klu")

suite_sparse_lib(name = "ldl")

suite_sparse_lib(
    name = "rbio",
    directory = "RBio",
)

suite_sparse_lib(
    name = "spqr",
    header_ext = "{h,hpp}",
)

suite_sparse_lib(name = "umfpack")

make_lib(
    name = "config",
    install_commands = [
        'install "${EXT_BUILD_ROOT}/external/lib_suite_sparse/SuiteSparse_config"/*.a ${INSTALLDIR}/lib',
    ],
    lib_source = LIB_SOURCE,
    linkopts = ["-libsuitesparseconfig"],
    make_commands = [
        'make -C "${EXT_BUILD_ROOT}/external/lib_suite_sparse/SuiteSparse_config" static',
    ],
    static_libraries = ["libsuitesparseconfig.a"],
)

cmake_lib(
    name = "gk",
    lib_source = LIB_SOURCE,
    linkopts = ["-lGKlib"],
    static_libraries = ["libGKlib.a"],
    working_directory = GK_PATH,
)

cmake_lib(
    name = "graphblas",
    cache_entries = {
        "BUILD_GRB_STATIC_LIBRARY:BOOL": "ON",
    },
    lib_source = LIB_SOURCE,
    working_directory = "GraphBLAS",
)

cmake_lib(
    name = "metis",
    cache_entries = {
        "GKLIB_PATH:PATH": "${{EXT_BUILD_ROOT}}/external/lib_suite_sparse/{}".format(GK_PATH),
        "SHARED:BOOL": "OFF",
    },
    lib_source = LIB_SOURCE,
    working_directory = METIS_PATH,
)

cmake_lib(
    name = "mongoose",
    lib_source = LIB_SOURCE,
    working_directory = "Mongoose",
)

bzl_library(
    name = "package",
    srcs = [
        "libraries.bzl",
        "package.bzl",
    ],
    deps = ["//:http_archive"],
)
