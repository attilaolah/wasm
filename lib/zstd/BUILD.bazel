load("@bazel_skylib//:bzl_library.bzl", "bzl_library")
load("@rules_foreign_cc//tools/build_defs:cmake.bzl", "cmake_external")
load("//toolchains/make:configure.bzl", "make_commands")

package(default_visibility = ["//:__subpackages__"])

_CACHE_ENTRIES = {
    "ZSTD_BUILD_SHARED:BOOL": "OFF",
    "ZSTD_BUILD_STATIC:BOOL": "ON",
}

LIB_CACHE_ENTRIES = dict(_CACHE_ENTRIES.items() + {
    "ZSTD_BUILD_PROGRAMS:BOOL": "OFF",
}.items())

BIN_CACHE_ENTRIES = dict(_CACHE_ENTRIES.items() + {
    "ZSTD_BUILD_PROGRAMS:BOOL": "ON",
}.items())

cmake_external(
    name = "zstd",
    cache_entries = LIB_CACHE_ENTRIES,
    # TODO: Get these from //toolchains/make:configure.bzl.
    env_vars = {
        "EM_CACHE": "${EXT_BUILD_ROOT}/emscripten_cache",
        "EM_CONFIG": "${EXT_BUILD_DEPS}/bin/emscripten_config.py",
        "NODE_PATH": "${EXT_BUILD_DEPS}/bin",
    },
    lib_name = "zstd_lib",
    lib_source = "@lib_zstd//:all",
    linkopts = [
        "-lzstd",
        "-lpthread",
    ],
    make_commands = make_commands(),
    static_libraries = ["libzstd.a"],
    working_directory = "build/cmake",
)

cmake_external(
    name = "binaries",
    binaries = [
        "unzstd",
        "zstd",
        "zstdcat",
        "zstdgrep",
        "zstdless",
        "zstdmt",
    ],
    cache_entries = BIN_CACHE_ENTRIES,
    lib_name = "zstd_bin",
    lib_source = "@lib_zstd//:all",
    make_commands = make_commands(),
    working_directory = "build/cmake",
)

bzl_library(
    name = "package",
    srcs = ["package.bzl"],
    deps = ["//:http_archive"],
)
