load("//lib:lib.bzl", "package_lib")
load("//lib:defs.bzl", "cache_entries")
load("//toolchains:utils.bzl", "no_error")
load("//toolchains/cmake:cmake.bzl", "cmake_lib")
load(":package.bzl", "NAME", "STATIC_LIBS")

# Library deps:
load("//lib/jpegturbo:package.bzl", JPEGTURBO_SPEC = "SPEC")

package(default_visibility = ["//:__subpackages__"])

package_lib()

CMAKE_EXE_LINKER_FLAGS = "-lpthread"

CMAKE_EXE_LINKER_FLAGS_WASM = " ".join([
    CMAKE_EXE_LINKER_FLAGS,
    "-s USE_PTHREADS",
])

CACHE_ENTRIES = cache_entries(
    build_shared_libs = False,
    # Use C_FLAGS_RELEASE so they'd get appended after other flags.
    cmake_c_flags_release = no_error([
        # keep sorted
        "format",
        "tautological-constant-out-of-range-compare",
        "unused-but-set-variable",
        "unused-function",
    ]),

    # Needed for CheckTypeSize checks to pass.
    cmake_required_flags = no_error([
        # keep sorted
        "unused-but-set-variable",
    ]),
    deps = {
        "jpeg": JPEGTURBO_SPEC,
        "zstd": {},
        "webp": {},
        "lzma": {},
        "z": {},
    },
)

cmake_lib(
    name = NAME,
    cache_entries = {
        "//config:wasm": cache_entries(
            CACHE_ENTRIES,
            cmake_exe_linker_flags = CMAKE_EXE_LINKER_FLAGS_WASM,
        ),
        "//conditions:default": cache_entries(
            CACHE_ENTRIES,
            cmake_exe_linker_flags = CMAKE_EXE_LINKER_FLAGS,
        ),
    },
    out_static_libs = STATIC_LIBS,
    deps = [
        "//lib/deflate",
        "//lib/jpegturbo",
        "//lib/lzma",
        "//lib/webp",
        "//lib/z",
        "//lib/zstd",
    ],
)
