diff --git source/CMakeLists.txt source/CMakeLists.txt
index 95218f5dc..e145a21fc 100755
--- source/CMakeLists.txt
+++ source/CMakeLists.txt
@@ -231,7 +231,9 @@ if(GCC)
     elseif(X86 AND NOT X64)
         string(FIND "${CMAKE_CXX_FLAGS}" "-march" marchPos)
         if(marchPos LESS "0")
-            add_definitions(-march=i686)
+            if(NOT DEFINED EMSCRIPTEN)
+                add_definitions(-march=i686)
+            endif()
             if(WIN32 AND NOT INTEL_CXX AND NOT CLANG AND
                CMAKE_CXX_COMPILER_VERSION VERSION_GREATER 6.0 AND CMAKE_CXX_COMPILER_VERSION VERSION_LESS 7.0)
                 add_definitions(-mpreferred-stack-boundary=2)
diff --git source/common/primitives.cpp source/common/primitives.cpp
index 10e418884..3ba9ba33e 100644
--- source/common/primitives.cpp
+++ source/common/primitives.cpp
@@ -293,7 +293,7 @@ extern "C" {
 int PFX(cpu_cpuid_test)(void) { return 0; }
 void PFX(cpu_emms)(void) {}
 void PFX(cpu_cpuid)(uint32_t, uint32_t *eax, uint32_t *, uint32_t *, uint32_t *) { *eax = 0; }
-void PFX(cpu_xgetbv)(uint32_t, uint32_t *, uint32_t *) {}
+int64_t PFX(cpu_xgetbv)(uint32_t) { return 0; }
 
 #if X265_ARCH_ARM == 0
 void PFX(cpu_neon_test)(void) {}
diff --git source/encoder/api.cpp source/encoder/api.cpp
--- source/encoder/api.cpp
+++ source/encoder/api.cpp
@@ -1109,68 +1109,9 @@
 #if LINKED_12BIT
         if (bitDepth == 12) return x265_12bit::x265_api_get(0);
 #endif
-
-        const char* libname = NULL;
-        const char* method = "x265_api_get_" xstr(X265_BUILD);
-        const char* multilibname = "libx265" ext;
-
-        if (bitDepth == 12)
-            libname = "libx265_main12" ext;
-        else if (bitDepth == 10)
-            libname = "libx265_main10" ext;
-        else if (bitDepth == 8)
-            libname = "libx265_main" ext;
-        else
-            return NULL;
-
-        const x265_api* api = NULL;
-        int reqDepth = 0;
-
-        if (g_recursion > 1)
-            return NULL;
-        else
-            g_recursion++;
-
-#if _WIN32
-        HMODULE h = LoadLibraryA(libname);
-        if (!h)
-        {
-            h = LoadLibraryA(multilibname);
-            reqDepth = bitDepth;
-        }
-        if (h)
-        {
-            api_get_func get = (api_get_func)GetProcAddress(h, method);
-            if (get)
-                api = get(reqDepth);
-        }
-#else
-        void* h = dlopen(libname, RTLD_LAZY | RTLD_LOCAL);
-        if (!h)
-        {
-            h = dlopen(multilibname, RTLD_LAZY | RTLD_LOCAL);
-            reqDepth = bitDepth;
-        }
-        if (h)
-        {
-            api_get_func get = (api_get_func)dlsym(h, method);
-            if (get)
-                api = get(reqDepth);
-        }
-#endif
-
-        g_recursion--;
-
-        if (api && bitDepth != api->bit_depth)
-        {
-            x265_log(NULL, X265_LOG_WARNING, "%s does not support requested bitDepth %d\n", libname, bitDepth);
-            return NULL;
-        }
-
-        return api;
     }
 
-    return &libapi;
+    return NULL;
 }
 
 const x265_api* x265_api_query(int bitDepth, int apiVersion, int* err)
