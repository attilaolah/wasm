load("//lib:lib.bzl", "package_lib")
load("//toolchains:utils.bzl", "no_error")
load("//toolchains/cmake:cmake.bzl", "cache_entries", "cmake_lib")
load(":package.bzl", "NAME")

package(default_visibility = ["//:__subpackages__"])

package_lib()

CACHE_ENTRIES = cache_entries(
    enable_cli = False,
    enable_libnuma = False,
    enable_pic = True,
    enable_shared = False,
    static_link_crt = True,
)

CACHE_ENTRIES_K8 = dict(CACHE_ENTRIES.items() + cache_entries(
    nasm_executable = "${NASM}",
).items())

cmake_lib(
    name = NAME,
    build_data = {
        "//cond:emscripten": ["@emscripten//:emranlib"],
        "//conditions:default": ["@nasm//:nasm"],
    },
    cache_entries = {
        "//cond:emscripten": CACHE_ENTRIES,
        "//conditions:default": CACHE_ENTRIES_K8,
    },
    copts = select({
        "//cond:emscripten": [
            "-sSHARED_MEMORY",  # for -pthread support
            no_error([
                # keep sorted
                "bitwise-instead-of-logical",
                "shadow",
                "unused-but-set-variable",
            ]),
        ],
        "//conditions:default": [],
    }),
    env = {
        "//cond:emscripten": {"EMRANLIB": "$(execpath @emscripten//:emranlib)"},
        "//conditions:default": {"NASM": "$(execpath @nasm//:nasm)"},
    },
    # TODO: Figure out why emar/emranlib is not run!
    postfix_script = "${EMRANLIB} ${INSTALLDIR}/lib/libx265.a",
    working_directory = "source",
)
