diff --git cc.nix cc.nix
index da7f21a..d3b02cc 100644
--- cc.nix
+++ cc.nix
@@ -169,7 +169,6 @@ pkgs.runCommand "bazel-${cc.orignalName or cc.name}-toolchain"
       # Security hardening requires optimization.
       # We need to undef it as some distributions now have it enabled by default.
       -U_FORTIFY_SOURCE
-      -fstack-protector
       # All warnings are enabled. Maybe enable -Werror as well?
       -Wall
       $(
@@ -192,11 +191,6 @@ pkgs.runCommand "bazel-${cc.orignalName or cc.name}-toolchain"
       -std=c++0x
     )
     LINK_FLAGS=(
-      $(
-        if [[ -x ${cc}/bin/ld.gold ]]; then echo -fuse-ld=gold; fi
-        add_linker_option_if_supported -Wl,-no-as-needed -no-as-needed
-        add_linker_option_if_supported -Wl,-z,relro,-z,now -z
-      )
       ${
         if stdenv.isDarwin
         then "-undefined dynamic_lookup -headerpad_max_install_names"
@@ -224,14 +218,8 @@ pkgs.runCommand "bazel-${cc.orignalName or cc.name}-toolchain"
       # handling in Bazel.
       -g0
 
-      # Conservative choice for -O
-      # -O3 can increase binary size and even slow down the resulting binaries.
-      # Profile first and / or use FDO if you need better performance than this.
-      -O2
-
-      # Security hardening on by default.
-      # Conservative choice; -D_FORTIFY_SOURCE=2 may be unsafe in some cases.
-      -D_FORTIFY_SOURCE=1
+      # Opinionated choice for -O.
+      -Oz
 
       # Disable assertions
       -DNDEBUG
@@ -245,7 +233,9 @@ pkgs.runCommand "bazel-${cc.orignalName or cc.name}-toolchain"
       ${
         if stdenv.isDarwin
         then ""
-        else "$(add_linker_option_if_supported -Wl,--gc-sections -gc-sections)"
+        # Cannot use --relocatable and --gc-sections together.
+        # Maybe add other flags here for wasm-ld?
+        else ""
       }
     )
     UNFILTERED_COMPILE_FLAGS=(
