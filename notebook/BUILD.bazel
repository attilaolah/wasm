load("@npm//http-server:index.bzl", "http_server")
load("@io_bazel_rules_closure//closure:defs.bzl", "closure_js_binary", "closure_js_library")
load("@npm//@bazel/typescript:index.bzl", "ts_project")
load(":js.bzl", "JS_TARGET", "TS_TARGET", "iife")

package(default_visibility = ["//visibility:public"])

exports_files([
    "index.html",
    "layout.html",
])

closure_js_binary(
    name = "notebook",
    language = JS_TARGET,
    deps = [":notebook_lib"],
)

closure_js_library(
    name = "notebook_lib",
    srcs = [":notebook_iife"],
    no_closure_library = True,
    suppress = [
        # Closure Compiler currently does not consume TypeScript .d.ts inputs.
        # Therefore it has no clue about the types, so we disable some optimisations.
        "JSC_UNKNOWN_EXPR_TYPE",
    ],
)

iife(
    name = "notebook_iife",
    srcs = [":notebook_ts"],
    replace = {
        "let importJS;": "",
        "importJS": "import",
    },
)

ts_project(
    name = "notebook_ts",
    srcs = ["main.ts"],
    tsconfig = {"compilerOptions": {
        "target": TS_TARGET,
        "esModuleInterop": True,
        "module": "commonjs",
    }},
    deps = ["@npm//@types/emscripten"],
)

http_server(
    name = "server",
    args = ["notebook/server"],
    data = [":server_files"],
)

genrule(
    name = "server_files",
    srcs = [
        "index.html",
        "notebook.html",
        "//notebook/runtime",
        "//notebook/style:themes",
    ] + select({
        "//config:opt": [
            ":notebook",
        ],
        "//conditions:default": [
            ":notebook_iife",
        ],
    }),
    outs = [
        "server/index.html",
        "server/notebook.html",
        "server/notebook.mjs",
        "server/modules/runtime.mjs",
        "server/modules/runtime.wasm",
        "server/themes/mdn-yari.css",
        "server/themes/mdn-yari.css.map",
    ],
    cmd = """
mkdir -p "$(RULEDIR)/server/modules"
mkdir -p "$(RULEDIR)/server/themes"
cp "$(location index.html)" "$(RULEDIR)/server/index.html"
cp "$(location notebook.html)" "$(RULEDIR)/server/notebook.html"
cp "$(RULEDIR)/runtime/runtime.wasm" "$(RULEDIR)/server/modules"
for f in $(locations //notebook/style:themes); do
  cp "$${f}" "$(RULEDIR)/server/themes/$$(basename $${f/_/-})"
done
""" + select({
        "//config:opt": """
cp "$(RULEDIR)/notebook.js" "$(RULEDIR)/server/notebook.mjs"
cp "$(RULEDIR)/runtime/runtime_wasm_js_3.js" "$(RULEDIR)/server/modules/runtime.mjs"
""",
        "//conditions:default": """
cp "$(location :notebook_iife)" "$(RULEDIR)/server/notebook.mjs"
cp "$(RULEDIR)/runtime/runtime.js" "$(RULEDIR)/server/modules/runtime.mjs"
""",
    }),
)
