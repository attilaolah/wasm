load("@aspect_rules_webpack//webpack:defs.bzl", "webpack_bundle")
load("@rules_rust//wasm_bindgen:wasm_bindgen.bzl", "rust_wasm_bindgen")
load("@rules_pkg//pkg:mappings.bzl", "filter_directory", "pkg_attributes", "pkg_filegroup", "pkg_files", "pkg_mkdirs", "pkg_mklink", "strip_prefix")
load("@rules_pkg//pkg:tar.bzl", "pkg_tar")

webpack_bundle(
    name = "notebook",
    srcs = [
        ":runtime_wasm",
        "//src:loader_ts",
        "//src:template",
        "//src/style",
        "@npm//normalize.css",
    ] + [
        # Strictly speaking, these are not sources.
        # However, they are required by the compilation process.
        "@npm//copy-webpack-plugin",
    ],
    entry_point = "entry_point.js",
    env = {
        # Required for loading the @npm//... dependencies from srcs.
        "NODE_PATH": "external/npm/node_modules",
    },
    output_dir = True,
    webpack_config = "webpack.config.js",
)

rust_wasm_bindgen(
    name = "runtime_wasm",
    wasm_file = "//:runtime_lib",
)

genrule(
    name = "loader",
    srcs = ["//:loader_ts"],
    outs = ["loader.js"],
    cmd = "cp $$(ls -1 $(execpaths //:loader_ts) | grep --extended-regexp /loader.js$$) $@",
)

filter_directory(
    name = "dist",
    src = ":notebook",
    outdir_name = "pkg",
    visibility = ["//docs:__pkg__"],
)

pkg_tar(
    name = "pkg_tar",
    srcs = [":dist"],
    strip_prefix = "pkg",
)
