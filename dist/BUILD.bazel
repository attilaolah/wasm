load("@aspect_rules_webpack//webpack:defs.bzl", "webpack_bundle")
load("@bazel_skylib//rules:expand_template.bzl", "expand_template")
load("@rules_pkg//pkg:mappings.bzl", "filter_directory", "pkg_attributes", "pkg_filegroup", "pkg_files", "pkg_mkdirs", "pkg_mklink", "strip_prefix")
load("@rules_pkg//pkg:tar.bzl", "pkg_tar")
load("//tools:npm.bzl", "package_contents", "package_json")

package_contents(
    name = "dist",
    srcs = [
        ":licenses",
        ":webnb_js_l",
        ":webnb_css_l",
        ":webnb_wasm_opt",
    ],
    outdir_name = "pkg",
    outputs = {
        "LICENSE.txt": "LICENSES.txt",
        "webnb.css": "*.css",
        "webnb.js": "*.js",
        "webnb.module.wasm": "webnb.oz.wasm",
    },
    visibility = ["//docs:__pkg__"],
)

package_json(
    name = "package_json",
    src = "//:package.json",
)

webpack_bundle(
    name = "webnb",
    srcs = [
        "//src:runtime",
        "//src/loader",
        "//src/style",
        "@npm//normalize.css",
        "@npm//prismjs",
    ],
    entry_point = ":entry_point",
    env = {
        # Required for loading the @npm//... dependencies from srcs.
        "NODE_PATH": "external/npm/node_modules",
    },
    output_dir = True,
    webpack_config = "webpack.config.js",
)

genrule(
	name = "webnb_js_l",
	srcs = [":webnb"],
	outs = ["webnb.l.js"],
	cmd = r"""
echo '/*! See LICENSE.txt for license information. */' > $@
grep --no-filename --invert-match --regexp '/\*!' \
  $$(find $(execpath :webnb) -name '*.js') \
  >> $@
""",
)

genrule(
    name = "webnb_wasm_opt",
	srcs = [":webnb"],
	outs = ["webnb.oz.wasm"],
	exec_tools = [
		"@emscripten_bin_linux//:bin/wasm-opt",
	],
	cmd = r"""
$(execpath @emscripten_bin_linux//:bin/wasm-opt) \
  --dce \
  --directize \
  --duplicate-function-elimination \
  --duplicate-import-elimination \
  --gufa-optimizing \
  --inline-main \
  --inlining-optimizing \
  --precompute-propagate \
  -Oz \
  -o $@ \
  $$(find $< -name '*.wasm')
""",
)

genrule(
	name = "webnb_css_opt",
	srcs = [":webnb"],
	outs = ["webnb.min.css"],
    exec_tools = ["@npm//csso-cli/bin:csso"],
	cmd = r"""
$(execpath @npm//csso-cli/bin:csso) \
  $$(find $(execpath :webnb) -name '*.css') \
  --output $@
""",
)

genrule(
	name = "webnb_css_l",
	srcs = [":webnb_css_opt"],
	outs = ["webnb.l.css"],
	cmd = r"""
echo '/*! See LICENSE.txt for license information. */' > $@
grep --no-filename --invert-match --regexp '/\*!' \
  $$(find $(execpath :webnb_css_opt) -name '*.css') \
  >> $@
""",
)

filegroup(
	name = "license",
	srcs = ["LICENSE.js"],
)

genrule(
	name = "licenses",
	srcs = [
		":webnb",
		":license",
	],
	outs = ["LICENSES.txt"],
	cmd = r"""
cat $(location :license) > $@
cat $$(find $(execpath :webnb) -name webnb.js.LICENSE.txt) >> $@
grep \
  --extended-regexp '^/\*!.*\*/$$' \
  $$(find $(execpath :webnb) -name '*.css') \
  >> $@
""",
)

expand_template(
    name = "entry_point",
    out = "entry_point.js",
    substitutions = select({
        "//config:" + mode: {"${COMPILATION_MODE}": mode}
        for mode in [
            "opt",
            "fastbuild",
            "dbg",
        ]
    }),
    template = "entry_point.js.tpl",
)

pkg_tar(
    name = "pkg_tar",
    srcs = [
        ":dist",
        ":package_json",
    ],
    remap_paths = {
        "dist/package.json": "package.json",
    },
    strip_prefix = "pkg",
)
